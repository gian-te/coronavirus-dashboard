{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routings.ts","./src/app/core/app-data/app-data.module.ts","./src/app/core/app-data/app-data.service.ts","./src/app/core/app-data/config.app-data.service.ts","./src/app/core/app-data/dashboard.app-data.service.ts","./src/app/core/app-data/log.app-data.service.ts","./src/app/core/core.module.ts","./src/app/core/notification/notification.component.ts","./src/app/core/notification/notification.module.ts","./src/app/core/notification/notification.service.ts","./src/app/core/service/configuration-manager.service.ts","./src/app/core/service/core-service.module.ts","./src/app/core/service/error-handling.service.ts","./src/app/core/service/log-manager.service.ts","./src/app/core/spinner/spinner.component.ts","./src/app/core/spinner/spinner.component.html","./src/app/core/spinner/spinner.module.ts","./src/app/core/spinner/spinner.service.ts","./src/app/core/store/store.ts","./src/app/feature/countries/countries.component.ts","./src/app/feature/countries/countries.component.html","./src/app/feature/countries/countries.module.ts","./src/app/feature/countries/countries.routing.module.ts","./src/app/feature/countries/countries.service.ts","./src/app/feature/countries/country-picker/country-picker.component.ts","./src/app/feature/countries/country-picker/country-picker.component.html","./src/app/feature/dashboard/dashboard-global-bubblechart-card/dashboard-global-bubblechart-card.ts","./src/app/feature/dashboard/dashboard-global-bubblechart-card/dashboard-global-bubblechart-card.html","./src/app/feature/dashboard/dashboard-global-case-ratio-card/dashboard-global-case-ratio-card.ts","./src/app/feature/dashboard/dashboard-global-case-ratio-card/dashboard-global-case-ratio-card.html","./src/app/feature/dashboard/dashboard-global-map-card/dashboard-global-map-card.ts","./src/app/feature/dashboard/dashboard-global-map-card/dashboard-global-map-card.html","./src/app/feature/dashboard/dashboard-global-sevendays-card/dashboard-global-sevendays-card.ts","./src/app/feature/dashboard/dashboard-global-sevendays-card/dashboard-global-sevendays-card.html","./src/app/feature/dashboard/dashboard-global-summary-card/dashboard-global-summary-card.ts","./src/app/feature/dashboard/dashboard-global-summary-card/dashboard-global-summary-card.html","./src/app/feature/dashboard/dashboard-global-tabular-card/dashboard-global-tabular-card.ts","./src/app/feature/dashboard/dashboard-global-tabular-card/dashboard-global-tabular-card.html","./src/app/feature/dashboard/dashboard-global-timeseries-card/dashboard-global-timeseries-card.ts","./src/app/feature/dashboard/dashboard-global-timeseries-card/dashboard-global-timeseries-card.html","./src/app/feature/dashboard/dashboard-global-todaycases-card/dashboard-global-todaycases-card.ts","./src/app/feature/dashboard/dashboard-global-todaycases-card/dashboard-global-todaycases-card.html","./src/app/feature/dashboard/dashboard.component.ts","./src/app/feature/dashboard/dashboard.component.html","./src/app/feature/dashboard/dashboard.module.ts","./src/app/feature/dashboard/dashboard.routing.module.ts","./src/app/feature/dashboard/dashboard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'dashboard'\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import(`./feature/dashboard/dashboard.module`).then(m => m.DashboardModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid-dashboard';\n  constructor(private router: Router) { }\n  menuClicked(e, menu: string) {\n    console.log(e);\n    console.log(menu);\n    this.router.navigateByUrl(menu);\n  }\n}\n","\n<div style=\"height: 100%;\">\n    <div style=\"display: block; background-color: #0763a8; padding: 5px\">\n        <div style=\"margin-left: 2px; margin-right: 2px; display: inline;\">\n            <button mat-button [matMenuTriggerFor]=\"aboveMenu\" (click)=\"menuClicked($event, 'dashboard')\" >Dashboard</button>\n            <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n            <!-- <button mat-menu-item>Item 1</button>\n            <button mat-menu-item>Item 2</button> -->\n            </mat-menu>\n        </div>\n    \n        <div style=\"margin-left: 2px; margin-right: 2px; display: inline;\">\n            <button mat-button [matMenuTriggerFor]=\"belowMenu\"  (click)=\"menuClicked($event, 'countries')\">Countries</button>\n            <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n            <!-- <button mat-menu-item>Item 1</button>\n            <button mat-menu-item>Item 2</button> -->\n            </mat-menu>\n        </div>\n    \n        <div style=\"margin-left: 2px; margin-right: 2px; display: inline;\">\n            <button mat-button [matMenuTriggerFor]=\"beforeMenu\" (click)=\"menuClicked($event, 'trends')\">Trends/Insights</button>\n            <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n            </mat-menu>\n    \n        </div>\n    </div>\n    <router-outlet></router-outlet>  \n    \n    \n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, PreloadAllModules } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CoreModule } from './core/core.module';\n\nimport { appRoutes } from './app.routings';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\nimport { BaseLogAppDataService } from './core/service/log-manager.service';\nimport { LogAppDataService } from './core/app-data/log.app-data.service';\nimport { BaseConfigAppDataService, ConfigurationManagerService } from './core/service/configuration-manager.service';\nimport { ConfigAppDataService } from './core/app-data/config.app-data.service';\n\nimport { DashboardModule } from './feature/dashboard/dashboard.module';\nimport { CountriesModule } from './feature/countries/countries.module';\n\n//3rd party\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DashboardModule, // feature module\n    CountriesModule, // feature module\n    RouterModule.forRoot(appRoutes,\n      {\n        enableTracing: false,\n        preloadingStrategy: PreloadAllModules\n      }),\n    HttpClientModule,\n    CoreModule,\n    MatMenuModule, MatButtonModule\n  ],\n  providers: [\n    {\n      provide: BaseLogAppDataService,\n      useClass: LogAppDataService,\n    },\n    {\n      provide: BaseConfigAppDataService,\n      useClass: ConfigAppDataService,\n    },\n    ConfigurationManagerService,\n    HttpClientModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'dashboard'\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () => import(`./feature/dashboard/dashboard.module`).then(m => m.DashboardModule)\r\n  },\r\n  {\r\n    path: 'countries',\r\n    loadChildren: () => import(`./feature/countries/countries.module`).then(m => m.CountriesModule)\r\n  },\r\n];\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { DashboardAppDataService } from './dashboard.app-data.service';\r\nimport { LogAppDataService } from './log.app-data.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    DashboardAppDataService,\r\n    LogAppDataService,\r\n  ],\r\n})\r\nexport class AppDataModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ConfigurationManagerService } from '../service/configuration-manager.service';\r\n\r\n\r\nexport class AppDataService  {\r\n  protected webApiUrl: string;\r\n  protected settingsLoaded: boolean;\r\n  constructor(public configService: ConfigurationManagerService) {\r\n   \r\n  }\r\n\r\n  public getWebApiHost(): string {\r\n    let url: string;\r\n    try {\r\n      url = this.configService.load().webApiUrl;\r\n\r\n      console.log('returning web api url ' + url);\r\n      return url;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\nimport { AppDataService } from './app-data.service'\r\nimport { BaseConfigAppDataService, ConfigurationManagerService } from '../service/configuration-manager.service';\r\n\r\n/*\r\n Use this service to \r\n*/\r\n@Injectable()\r\nexport class ConfigAppDataService extends AppDataService implements BaseConfigAppDataService {\r\n    GetConfig(key: string): Observable<any> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    SaveConfig(key: string, value: any): Observable<any> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n  constructor(public configService: ConfigurationManagerService) {\r\n    super(configService);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\nimport { AppDataService } from './app-data.service'\r\nimport { ConfigurationManagerService } from '../service/configuration-manager.service';\r\nimport { Stats } from 'src/app/models/dashboard/country-stats';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class DashboardAppDataService extends AppDataService {\r\n\r\n  constructor(protected _http: HttpClient, public configService: ConfigurationManagerService) {\r\n    super(configService);\r\n  }\r\n  // getRawTreeData(): Observable<any> {\r\n  //   return this._http.get<string[]>(this.getWebApiHost() + 'alertmessage/');\r\n  // }\r\n\r\n  // function that calls a web api with arguments being pased\r\n  public getGlobalCases(): Observable<Stats> {\r\n    let headers = new HttpHeaders();\r\n    return this._http.get(this.getWebApiHost() + 'jhucsse', { headers });\r\n  }\r\n\r\n  public getAllAsOfYesterday() {\r\n    let headers = new HttpHeaders();\r\n    return this._http.get(this.getWebApiHost() + 'all?yesterday', { headers });\r\n  }\r\n\r\n  public getGlobalHistoricalData() {\r\n    let headers = new HttpHeaders();\r\n    return this._http.get(this.getWebApiHost() + 'historical/all?lastdays=230', { headers });\r\n  }\r\n\r\n  public getAllCurrentCountryData() {\r\n    let headers = new HttpHeaders();\r\n    return this._http.get(this.getWebApiHost() + 'continents?yesterday=true&sort', { headers });\r\n  }\r\n\r\n  public getDataOfPastSevenDays() {\r\n    let headers = new HttpHeaders();\r\n    return this._http.get(this.getWebApiHost() + 'historical/all?lastdays=7', { headers });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\nimport { AppDataService } from './app-data.service'\r\nimport { BaseLogAppDataService } from '../service/log-manager.service';\r\nimport { ConfigurationManagerService } from '../service/configuration-manager.service';\r\n\r\n@Injectable()\r\nexport class LogAppDataService extends AppDataService implements BaseLogAppDataService {\r\n  constructor(public configService: ConfigurationManagerService) {\r\n    super(configService);\r\n  }\r\n  public Log(message: string) {\r\n    console.log(message);\r\n  }\r\n  public LogError(error: Error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AppDataModule } from './app-data/app-data.module';\r\nimport { CoreServiceModule } from './service/core-service.module';\r\nimport { SpinnerModule } from './spinner/spinner.module';\r\nimport { NotificationModule } from './notification/notification.module';\r\n\r\n\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\n\r\n\r\n// acts as a 'trojan horse' for all of the other modules in src/app/core\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    AppDataModule,\r\n    CoreServiceModule.forRoot(),\r\n    SpinnerModule,\r\n    NotificationModule\r\n  ],\r\n  exports: [\r\n    SpinnerComponent,\r\n    NotificationComponent\r\n  ],\r\n  providers: [\r\n    \r\n  ],\r\n})\r\nexport class CoreModule {\r\n}\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { NotificationService, NotificationObject, NotificationActions } from './notification.service';\r\n\r\n@Component({\r\n  selector: 'div-notification',\r\n  template: '',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  durationInSeconds = 5;\r\n\r\n  constructor(private notificationService: NotificationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() { \r\n    this.notificationService.notificationObject.subscribe(data => {\r\n      this.openSnackBar(data);\r\n    });\r\n  }\r\n\r\n  private openSnackBar(notificationObject: NotificationObject) {\r\n    if (notificationObject) {\r\n      const config = new MatSnackBarConfig();\r\n      config.duration = this.durationInSeconds * 1000;\r\n      switch (notificationObject.action) {\r\n        case NotificationActions.ERROR: {\r\n          config.panelClass = 'NotificationError';\r\n          break;\r\n        }\r\n        case NotificationActions.WARNING: {\r\n          config.panelClass = 'NotificationWarning';\r\n          break;\r\n        }\r\n        default: {\r\n          config.panelClass = 'NotificatioInfo';\r\n          break;\r\n        }\r\n      }\r\n      \r\n      this.snackBar.open(\r\n        notificationObject.message,\r\n        undefined,\r\n        config);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { NotificationService, NotificationObject, NotificationActions } from './notification.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatSnackBarModule],\r\n  exports: [NotificationComponent],\r\n  declarations: [NotificationComponent],\r\n  providers: [NotificationService]\r\n})\r\nexport class NotificationModule { }\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport class NotificationObject {\r\n  message?: string;\r\n  action?: NotificationActions;\r\n}\r\n\r\nexport enum NotificationActions {\r\n  INFORMATION,\r\n  WARNING,\r\n  ERROR,\r\n}\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  private _notficationObject: Subject<NotificationObject> = new Subject<NotificationObject>();\r\n  public readonly notificationObject: Observable<NotificationObject> = this._notficationObject.asObservable();\r\n\r\n  public showNotification(message: string, action: NotificationActions): void {\r\n    let notification: NotificationObject = {\r\n      message: message,\r\n      action: action,\r\n    };\r\n    this._notficationObject.next(notification);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { of, Observable, ObservableInput } from 'rxjs';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\nexport class BaseConfigAppDataService {\r\n  GetConfig(key: string): Observable<any> { throw new Error(\"Method not implemented.\"); };\r\n  SaveConfig(key: string, value: any): Observable<any> { throw new Error(\"Method not implemented.\"); };\r\n}\r\n\r\n/* [GT] This service is a singleton. The config file will be loaded only once and will be available to all components\r\n using this service once initialized. This service will load the contents of the .json file to an object in memory\r\n which will be accessible in this service using the settingsObj property. Consumers of this service can just\r\n use configService.load()[\"configKey\"] to retrieve a config value.*/\r\n@Injectable(\r\n  {\r\n    providedIn: 'root',\r\n  })\r\nexport class ConfigurationManagerService  {\r\n  public webApiUrl: string;\r\n  public signalrUrl: string;\r\n  private settings: string;\r\n  private settingsObj: any;\r\n  constructor(public _http: HttpClient) {\r\n\r\n  }\r\n\r\n  load()\r\n  {\r\n    try {\r\n      // remove if statement to load settings.json for every server call.\r\n      if (!this.settingsObj) {\r\n        this.settings = this.loadTextFileAjaxSync('./settings.json', 'application/json');\r\n        this.settingsObj = JSON.parse(this.settings);\r\n      }\r\n      return this.settingsObj;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  protected loadTextFileAjaxSync(filePath, mimeType) {\r\n    const xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.open(\"GET\", filePath, false);\r\n    if (mimeType != null) {\r\n      if (xmlhttp.overrideMimeType) {\r\n        xmlhttp.overrideMimeType(mimeType);\r\n      }\r\n    }\r\n    xmlhttp.send();\r\n    if (xmlhttp.status == 200) {\r\n      return xmlhttp.responseText;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ErrorHandler, ModuleWithProviders} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ConfigurationManagerService } from './configuration-manager.service';\r\nimport { LogManagerService } from './log-manager.service';\r\nimport { ErrorHandlingService } from './error-handling.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    ConfigurationManagerService,\r\n    LogManagerService,\r\n    { provide: ErrorHandler, useClass: ErrorHandlingService }\r\n  ],\r\n})\r\nexport class CoreServiceModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreServiceModule,\r\n      providers: [\r\n        ConfigurationManagerService,\r\n        LogManagerService,\r\n        ErrorHandlingService\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\ndeclare module \"@angular/core\" {\r\n  interface ModuleWithProviders<T = any> {\r\n      ngModule: Type<T>;\r\n      providers?: Provider[];\r\n  }\r\n}\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ErrorHandlingService implements ErrorHandler  {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  handleError(error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport class BaseLogAppDataService {\r\n  Log(message: string) { throw new Error(\"Method not implemented.\"); };\r\n  LogError(error: Error) { throw new Error(\"Method not implemented.\"); };\r\n}\r\n\r\n@Injectable()\r\nexport class LogManagerService {\r\n\r\n  constructor(private logAppDataService: BaseLogAppDataService) {\r\n  }\r\n\r\n  public Log(message: string) {\r\n    this.logAppDataService.Log(message);\r\n  }\r\n\r\n  public LogError(error: Error) {\r\n    this.logAppDataService.LogError(error);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerService, SpinnerState } from './spinner.service';\r\n\r\n@Component({\r\n  selector: 'div-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnDestroy, OnInit {\r\n  visible = false;\r\n\r\n  private spinnerStateChanged: Subscription;\r\n\r\n  constructor(private spinnerService: SpinnerService) { }\r\n\r\n  ngOnInit() {\r\n    this.spinnerStateChanged = this.spinnerService.spinnerState.subscribe(\r\n      (state: SpinnerState) => {\r\n        if (this.visible && state.show) {\r\n          return;\r\n        }\r\n        this.visible = state.show;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.spinnerStateChanged.unsubscribe();\r\n  }\r\n}\r\n","<mat-progress-spinner class=\"Spinner\" *ngIf=\"visible\"\r\n  color=\"primary\"\r\n  mode=\"indeterminate\">\r\n</mat-progress-spinner>\r\n<div class=\"Overlay\" *ngIf=\"visible\"></div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SpinnerComponent } from './spinner.component';\r\nimport { SpinnerService } from './spinner.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatProgressSpinnerModule],\r\n  exports: [SpinnerComponent],\r\n  declarations: [SpinnerComponent],\r\n  providers: [SpinnerService]\r\n})\r\nexport class SpinnerModule { }\r\n\r\n\r\n\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport interface SpinnerState {\r\n  show: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class SpinnerService {\r\n  public _spinnerSubject = new Subject<SpinnerState>();\r\n\r\n  public readonly spinnerState: Observable<SpinnerState> = this._spinnerSubject.asObservable();\r\n\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    prior: SpinnerService\r\n  ) {\r\n    if (prior) {\r\n      return prior;\r\n    }\r\n    console.log('created spinner service');\r\n  }\r\n\r\n  show() {\r\n    console.log('showing spinner');\r\n    this._spinnerSubject.next(<SpinnerState>{ show: true });\r\n  }\r\n\r\n  hide() {\r\n    console.log('hiding spinner');\r\n    var that = this;\r\n    setTimeout(function () { that._spinnerSubject.next(<SpinnerState>{ show: false });}, 500); \r\n  }\r\n}\r\n","import {Observable, BehaviorSubject} from 'rxjs';\r\n\r\nexport class Store<T> {\r\n    state$: Observable<T>;\r\n    private _state$: BehaviorSubject<T>;\r\n\r\n    protected constructor (initialState: T) {\r\n        this._state$ = new BehaviorSubject(initialState);\r\n        this.state$ = this._state$.asObservable();\r\n    }\r\n\r\n    protected get state (): T {\r\n        return this._state$.getValue();\r\n    }\r\n\r\n    protected setState (nextState: T): void {\r\n        this._state$.next(nextState);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.css']\r\n})\r\nexport class CountriesComponent {\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div style=\"height:  100%; display: block;\">\r\n    <!-- <div>\r\n        <div style=\"display: inline-block;\"> Dashboard </div>\r\n        <div style=\"display: inline-block;\"> Countries </div>\r\n        <div style=\"display: inline-block;\"> Insights </div>\r\n\r\n        \r\n    </div> -->\r\n    <div>\r\n        <span> hello </span>\r\n    </div>\r\n    \r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DashboardRoutingModule, routedComponents } from './countries.routing.module';\r\nimport { Countries } from './countries.service';\r\nimport { CountriesComponent } from './countries.component';\r\nimport { SpinnerService } from 'src/app/core/spinner/spinner.service';\r\nimport { SpinnerModule } from 'src/app/core/spinner/spinner.module';\r\n\r\n// 3rd party\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\n\r\n\r\n// angular\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    routedComponents,\r\n    // container component\r\n    CountriesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    DashboardRoutingModule,\r\n    SpinnerModule,\r\n    GoogleMapsModule, NgApexchartsModule,\r\n    MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule,MatGridListModule\r\n  ],\r\n  exports:\r\n    [\r\n      CountriesComponent\r\n    ],\r\n  providers: [\r\n    Countries,\r\n    SpinnerService\r\n  ],\r\n})\r\nexport class CountriesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CountriesComponent } from './countries.component';\r\nimport { CountryPickerComponent } from './country-picker/country-picker.component';\r\n\r\n// import { HeatmapCardComponent } from './dashboard-heatmap-card/dashboard-heatmap-card';\r\n// import { MapCardComponent } from './dashboard-map-card/dashboard-map-card';\r\n// import { YesterdayCardComponent } from './dashboard-yesterday-card/dashboard-yesterday-card';\r\n// import { ChartCardComponent } from './dashboard-chart-card/dashboard-chart-card';\r\n\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CountriesComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  CountriesComponent,CountryPickerComponent\r\n];\r\n\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\n\r\n\r\n// Core Services\r\nimport { Store } from '../../core/store/store';\r\nimport { DashboardAppDataService } from '../../core/app-data/dashboard.app-data.service';\r\nimport { SpinnerService } from '../../core/spinner/spinner.service';\r\n\r\n\r\n// Shared Service\r\nimport { ConfigurationManagerService } from '../../core/service/configuration-manager.service';\r\n\r\n\r\nexport class CountriesState {\r\n  selectedCountry = '';\r\n}\r\n\r\n@Injectable()\r\nexport class Countries extends Store<CountriesState> {\r\n  \r\n\r\n  constructor(private appDataService: DashboardAppDataService,\r\n              public spinnerService: SpinnerService\r\n  ) {\r\n    super(new CountriesState());\r\n\r\n  }\r\n\r\n  // public getGlobalData(): void {\r\n  //   this.spinnerService.show();\r\n  //   this.appDataService.getGlobalCases().subscribe(data => {\r\n  //       this.setState({\r\n  //         ...this.state,\r\n  //         globalData: data,\r\n  //       });\r\n  //       this.spinnerService.hide();\r\n  //     });\r\n  // }\r\n\r\n  // public getAllAsOfYesterday(): void {\r\n  //    this.spinnerService.show();\r\n  //    this.appDataService.getAllAsOfYesterday().subscribe(data => {\r\n  //       this.setState({\r\n  //         ...this.state,\r\n  //         allAsOfYesterday: data,\r\n  //       });\r\n  //       this.spinnerService.hide();\r\n  //     });\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-country-picker',\n  templateUrl: './country-picker.component.html',\n  styleUrls: ['./country-picker.component.css']\n})\nexport class CountryPickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>country-picker works!</p>\n","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexFill,\r\n  ApexXAxis,\r\n  ApexDataLabels,\r\n  ApexYAxis,\r\n  ApexTitleSubtitle\r\n} from 'ng-apexcharts';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  title: ApexTitleSubtitle;\r\n  fill: ApexFill;\r\n  dataLabels: ApexDataLabels;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-global-bubblechart-card',\r\n  templateUrl: './dashboard-global-bubblechart-card.html',\r\n  styleUrls: ['./dashboard-global-bubblechart-card.css'],\r\n})\r\nexport class GlobalBubbleChartCardComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  data: any;\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardService.getAllCurrentCountryData();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.allCurrentCountryData),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.data = response;\r\n        that.renderBubbleChart();\r\n      });\r\n\r\n  }\r\n\r\n  // https://apexcharts.com/angular-chart-demos/bubble-charts/simple/\r\n  renderBubbleChart() {\r\n    this.chartOptions = {\r\n      series: [\r\n        // {\r\n        //   name: 'Bubble1',\r\n        //   data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        //     min: 10,\r\n        //     max: 60\r\n        //   })\r\n        // },\r\n        // push later\r\n      ],\r\n      chart: {\r\n        height: 370,\r\n        type: 'bubble',\r\n        zoom: {\r\n          enabled: true,\r\n          autoScaleYaxis: true,\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      fill: {\r\n        opacity: 0.8\r\n      },\r\n      title: {\r\n        text: 'Active Cases'\r\n      },\r\n      xaxis: {\r\n        tickAmount: 5,\r\n        type: 'datetime'\r\n      },\r\n      yaxis: {\r\n       tickAmount: 2,\r\n       max: 7500000\r\n      }\r\n    };\r\n\r\n    this.data.forEach(obj => {\r\n      // console.log(obj);\r\n      this.chartOptions.series.push(\r\n        {\r\n          name: obj.continent,\r\n          data: this.generateData(obj)\r\n        }\r\n      );\r\n    });\r\n  }\r\n  generateData(obj: any): any {\r\n    const series = [];\r\n     // let x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\r\n      // let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n      // let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n    const x = obj.updated;\r\n    const y = obj.cases;\r\n    const z = obj.active;\r\n    console.log([x, y, z]);\r\n    series.push([x, y, z]);\r\n\r\n    return series;\r\n  }\r\n\r\n  // generateData(baseval, count, yrange) {\r\n  //   let i = 0;\r\n  //   let series = [];\r\n  //   while (i < count) {\r\n  //     let x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\r\n  //     let y =\r\n  //       Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n  //     let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n\r\n  //     series.push([x, y, z]);\r\n  //     baseval += 86400000;\r\n  //     i++;\r\n  //   }\r\n  //   return series;\r\n  // }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin-left: 2px; margin-right: 5px; width: 20%; display: inline-block; float: right;\" title=\"Shows all confirmed cases and all active cases.\">\r\n\r\n <!-- Table inside a card-->\r\n <mat-card>\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title> <b>Continental View</b></mat-card-title>\r\n    <mat-card-subtitle></mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div *ngIf=\"chartOptions\">\r\n      <div id=\"chart\">\r\n        <apx-chart\r\n          [series]=\"chartOptions.series\"\r\n          [chart]=\"chartOptions.chart\"\r\n          [xaxis]=\"chartOptions.xaxis\"\r\n          [fill]=\"chartOptions.fill\"\r\n          [dataLabels]=\"chartOptions.dataLabels\"\r\n          [title]=\"chartOptions.title\"\r\n          [yaxis]=\"chartOptions.yaxis\"\r\n        ></apx-chart>\r\n      </div>\r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models\r\nimport {  YesterdayStats } from '../../../models/dashboard/yesterday-stats';\r\n\r\n// 3rd party\r\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\r\n\r\n// material\r\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ChartComponent } from 'ng-apexcharts';\r\n\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexResponsive,\r\n  ApexChart,\r\n  ApexLegend\r\n} from 'ng-apexcharts';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  responsive: ApexResponsive[];\r\n  labels: any;\r\n  colors: string[];\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-global-case-ratio-card',\r\n  templateUrl: './dashboard-global-case-ratio-card.html',\r\n  styleUrls: ['./dashboard-global-case-ratio-card.css'],\r\n})\r\nexport class GlobalCaseRatioCardComponent implements OnInit, OnDestroy {\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n\r\n  public yesterdayData: YesterdayStats;\r\n\r\n  constructor(private dashboardService: DashboardService) {\r\n\r\n\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n\r\n\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.allAsOfYesterday),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.yesterdayData = response;\r\n\r\n        // https://apexcharts.com/angular-chart-demos/pie-charts/\r\n        this.chartOptions = {\r\n          series: [that.yesterdayData.active, that.yesterdayData.recovered, that.yesterdayData.deaths],\r\n          chart: {\r\n            width: 360,\r\n            type: 'donut'\r\n          },\r\n          labels: ['Active', 'Recovered', 'Died'],\r\n          colors: ['#00e396', '#ff4560', '#39539E'],\r\n          legend:\r\n          {\r\n              show: true,\r\n              labels: {\r\n                  useSeriesColors: true\r\n                }\r\n              },\r\n          responsive: [\r\n            {\r\n              breakpoint: 480,\r\n              options: {\r\n                chart: {\r\n                  width: 180\r\n                },\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin: 5px 5px 5px 5px;\">\r\n<mat-card *ngIf='yesterdayData' class=\"card-header\" style=\" height: 370px;\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title><b>Coronavirus Case Ratio of Global Data Since Day One</b></mat-card-title>\r\n    <mat-card-subtitle>Visual Representation of All Historical Cases</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"margin-top: 10px;\">\r\n    <div>\r\n      <div id=\"chart\">\r\n        <apx-chart\r\n          [series]=\"chartOptions.series\"\r\n          [chart]=\"chartOptions.chart\"\r\n          [labels]=\"chartOptions.labels\"\r\n          [responsive]=\"chartOptions.responsive\"\r\n          [legend]=\"chartOptions.legend\"\r\n        ></apx-chart>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models\r\nimport {  CountryStats } from '../../../models/dashboard/country-stats';\r\n\r\n// 3rd party\r\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\r\n\r\n@Component({\r\n  selector: 'app-global-map-card',\r\n  templateUrl: './dashboard-global-map-card.html',\r\n  styleUrls: ['./dashboard-global-map-card.css'],\r\n})\r\nexport class GlobalMapCardComponent implements OnInit, OnDestroy {\r\n\r\n  public data: CountryStats[];\r\n  // public yesterdayData: YesterdayStats;\r\n\r\n  public updatedAt: string;\r\n\r\n  map: google.maps.Map;\r\n  zoom = 3;\r\n  // PH lat: \"12.879721\", longitude: \"121.774017\"\r\n  // this.center = { lat: 12.879721, lng: 121.774017 };\r\n  center: google.maps.LatLngLiteral  = { lat: 12.879721, lng: 121.774017 };;\r\n  options: google.maps.MapOptions = {\r\n    zoomControl: false,\r\n    scrollwheel: false,\r\n    disableDoubleClickZoom: true,\r\n    mapTypeId: 'terrain',\r\n    mapTypeControl: false,\r\n    streetViewControl: false,\r\n    keyboardShortcuts: false,\r\n    fullscreenControl: false\r\n  };\r\n\r\n\r\n  @ViewChild('gmap') gmap: GoogleMap;\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.globalData),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.data = response as CountryStats[];\r\n        that.updatedAt = that.data.find(item => item.country === 'Philippines').updatedAt;\r\n        that.drawPolygons();\r\n      });\r\n\r\n\r\n    // dynamic centering:\r\n    // navigator.geolocation.getCurrentPosition(position => { this.center = { lat: position.coords.latitude, lng: position.coords.longitude} });\r\n\r\n  }\r\n\r\n\r\n\r\n  drawPolygons() {\r\n    const map = this.gmap.googleMap;\r\n    // {country: \"Philippines\", county: null, updatedAt: \"2020-08-12 04:27:29\", stats: {…}, coordinates: {…}, …}\r\n    this.data.forEach(item => {\r\n      const c = new google.maps.LatLng(parseFloat(item.coordinates.latitude), parseFloat(item.coordinates.longitude));\r\n      const cityCircle = new google.maps.Circle({\r\n        strokeColor: '#e00d0d',\r\n        strokeOpacity: 0.6,\r\n        strokeWeight: 50 * (item.stats.confirmed / 100000),\r\n        fillColor: '#e00d0d',\r\n        fillOpacity: 0.35,\r\n        center: c,\r\n        map,\r\n        radius: item.stats.confirmed / 10000\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin: 5px 5px 5px 5px;\">\r\n<!-- Map inside a card--> \r\n<mat-card class=\"card-map\" style=\"height: 100%\" title=\"Radius is relative to every 100K cases. Source: Johns Hopkins University.\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-map-header-image\"></div>\r\n    <mat-card-title><b>Interactive View of Global Data</b></mat-card-title>\r\n    <mat-card-subtitle>Snapshot as of {{ updatedAt }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"height: 100%;\">\r\n    <div>\r\n      <google-map #gmap height=\"540px\" width=\"100%\" [zoom]=\"zoom\" [center]=\"center\"\r\n      [options]=\"options\" > \r\n      </google-map>\r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\nimport {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ChartComponent,\r\n  ApexDataLabels,\r\n  ApexXAxis,\r\n  ApexPlotOptions,\r\n  ApexStroke,\r\n  ApexTitleSubtitle,\r\n  ApexYAxis,\r\n  ApexTooltip,\r\n  ApexFill,\r\n  ApexLegend\r\n} from 'ng-apexcharts';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  stroke: ApexStroke;\r\n  title: ApexTitleSubtitle;\r\n  tooltip: ApexTooltip;\r\n  fill: ApexFill;\r\n  legend: ApexLegend;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-global-sevendays-card',\r\n  templateUrl: './dashboard-global-sevendays-card.html',\r\n  styleUrls: ['./dashboard-global-sevendays-card.css'],\r\n})\r\nexport class GlobalSevenDayCasesCardComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  data: any;\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardService.getDataOfPastSevenDays();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.sevenDayData),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.data = response;\r\n        that.renderStackedColumnChart();\r\n      });\r\n\r\n  }\r\n\r\n  // https://apexcharts.com/angular-chart-demos/bubble-charts/simple/\r\n  renderStackedColumnChart() {\r\n      \r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: 'Confirmed',\r\n          data: [44, 55, 41, 37, 22, 43, 21]\r\n        },\r\n        {\r\n          name: 'Recovered',\r\n          data: [12, 17, 11, 9, 15, 11, 20]\r\n        },\r\n        {\r\n          name: 'Active',\r\n          data: [53, 32, 33, 52, 13, 43, 32]\r\n        },\r\n        {\r\n          name: 'Deaths',\r\n          data: [9, 7, 5, 8, 6, 9, 4]\r\n        }\r\n      ],\r\n      chart: {\r\n        type: 'bar',\r\n        height: 350,\r\n        stacked: true\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true\r\n        }\r\n      },\r\n      stroke: {\r\n        width: 1,\r\n        colors: ['#fff']\r\n      },\r\n      title: {\r\n        text: 'Case Breakdown'\r\n      },\r\n      xaxis: {\r\n        categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\r\n        labels: {\r\n          formatter(val) {\r\n            return val + 'K';\r\n          }\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: undefined\r\n        }\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter(val) {\r\n            return val + 'K';\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'left',\r\n        offsetX: 40\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin: 5px 5px 5px 5px;\">\r\n\r\n <!-- Table inside a card-->\r\n <mat-card>\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title> <b>7-Day Data</b></mat-card-title>\r\n    <mat-card-subtitle></mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div *ngIf=\"chartOptions\">\r\n      <div id=\"chart\">\r\n        <apx-chart\r\n        [series]=\"chartOptions.series\"\r\n        [chart]=\"chartOptions.chart\"\r\n        [dataLabels]=\"chartOptions.dataLabels\"\r\n        [plotOptions]=\"chartOptions.plotOptions\"\r\n        [xaxis]=\"chartOptions.xaxis\"\r\n        [stroke]=\"chartOptions.stroke\"\r\n        [fill]=\"chartOptions.fill\"\r\n        [yaxis]=\"chartOptions.yaxis\"\r\n        [title]=\"chartOptions.title\"\r\n        [tooltip]=\"chartOptions.tooltip\"\r\n        [legend]=\"chartOptions.legend\"\r\n      ></apx-chart>\r\n      </div>\r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models \r\nimport {  CountryStats } from '../../../models/dashboard/country-stats';\r\nimport {  YesterdayStats } from '../../../models/dashboard/yesterday-stats';\r\n\r\n// 3rd party\r\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\r\n\r\n// material\r\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-global-summary-card',\r\n  templateUrl: './dashboard-global-summary-card.html',\r\n  styleUrls: ['./dashboard-global-summary-card.css'],\r\n})\r\nexport class GlobalSummaryCardComponent implements OnInit, OnDestroy {\r\n\r\n  public yesterdayData: YesterdayStats;\r\n\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardService.getAllAsOfYesterday();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    const that = this;\r\n  \r\n    \r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.allAsOfYesterday),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.yesterdayData = response;\r\n        console.log(this.yesterdayData);\r\n        setInterval(() => { that.dashboardService.getAllAsOfYesterday(); }, 15 * 60 * 1000);\r\n\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin: 5px 5px 5px 5px;\">\r\n<mat-card *ngIf='yesterdayData' class=\"card-header\" title=\"Updated every 15 minutes by JHUCSSE.\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title><b>Global Data By The Numbers</b></mat-card-title>\r\n    <mat-card-subtitle>Updated Every 15 minutes</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"margin-top: 10px;\">\r\n    <div>\r\n      <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\">Total Cases:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.cases.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\"> Active:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.active.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\"> Recoveries:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.recovered.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\"> Deaths:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.deaths.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <!-- <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\"> Population:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.population.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\">Total Tests:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.tests.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"huge\">Tests per 1M:</span>\r\n            <br/>\r\n            <span class=\"huge\"> {{yesterdayData.testsPerOneMillion.toLocaleString()}}</span>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <span class=\"medium\">Today's New Cases:</span>\r\n            <br/>\r\n            <span class=\"medium\">Active: {{yesterdayData.todayCases.toLocaleString()}}</span>\r\n            <br/>\r\n            <span class=\"medium\">Recovered: {{yesterdayData.todayRecovered.toLocaleString()}}</span>\r\n            <br/>\r\n            <span class=\"medium\">Deaths: {{yesterdayData.todayDeaths.toLocaleString()}}</span>\r\n\r\n          </div>\r\n        </mat-grid-tile> -->\r\n        <!-- <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile> -->\r\n      </mat-grid-list>\r\n      \r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models \r\nimport {  CountryStats } from '../../../models/dashboard/country-stats';\r\nimport {  YesterdayStats } from '../../../models/dashboard/yesterday-stats';\r\n\r\n// 3rd party\r\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\r\n\r\n// material\r\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-global-tabular-card',\r\n  templateUrl: './dashboard-global-tabular-card.html',\r\n  styleUrls: ['./dashboard-global-tabular-card.css'],\r\n})\r\nexport class GlobalTabularCardComponent implements OnInit, OnDestroy {\r\n\r\n  public data: CountryStats[];\r\n  public displayedColumns: string[] = ['country',  'confirmed', 'recovered', 'deaths'];\r\n  public updatedAt: string;\r\n  public dataSource = new MatTableDataSource<CountryStats>(this.data);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardService.getGlobalData();\r\n\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    const that = this;\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.globalData),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.data = response as CountryStats[];\r\n        that.refreshDataSource();\r\n      \r\n      });\r\n  \r\n  }\r\n\r\n\r\n  refreshDataSource() {\r\n    console.log(this.data[0]);\r\n    var ph = this.data.find(item => item.country === 'Philippines');\r\n    console.log(ph);\r\n    this.updatedAt = ph.updatedAt;\r\n\r\n    this.dataSource.data = this.data;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n        switch (property) {\r\n          case 'confirmed': return item.stats.confirmed;\r\n          case 'recovered': return item.stats.recovered;\r\n          case 'deaths': return item.stats.deaths;\r\n        default: return item[property];\r\n      }\r\n    };\r\n    const matSort = { id: 'confirmed' } as MatSortable;\r\n    this.sort.direction = 'asc' as SortDirection;\r\n    this.sort.sort(matSort);\r\n  }\r\n\r\n  \r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin: 5px 5px 5px 5px;\">\r\n\r\n <!-- Table inside a card-->\r\n <mat-card class=\"card-header\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title> <b>Tabular View of Global Data</b></mat-card-title>\r\n    <mat-card-subtitle>Snapshot as of {{ updatedAt }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"confirmed\" matSortDisableClear>\r\n\r\n        <!-- Country Column -->\r\n        <ng-container matColumnDef=\"country\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Area </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{item.country}}{{item.province == null ? '' : ', ' + item.province}}{{item.county == null ? '' : ', ' + item.county}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n        <!-- <ng-container matColumnDef=\"county\">\r\n          <th mat-header-cell *matHeaderCellDef> County </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{item.county == null ? 'N/A' : item.county}} </td>\r\n        </ng-container> -->\r\n    \r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"confirmed\" >\r\n          <th mat-header-cell  *matHeaderCellDef mat-sort-header> Confirmed </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{item.stats.confirmed}} </td>\r\n        </ng-container>\r\n    \r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"recovered\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Recovered </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{item.stats.recovered}} </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"deaths\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{item.stats.deaths}} </td>\r\n        </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </div>\r\n      <mat-paginator [pageSizeOptions]=\"[10]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n\r\nimport {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexTitleSubtitle,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexMarkers,\r\n  ApexYAxis,\r\n  ApexXAxis,\r\n  ApexTooltip\r\n} from 'ng-apexcharts';\r\n\r\n@Component({\r\n  selector: 'app-global-timeseries-card',\r\n  templateUrl: './dashboard-global-timeseries-card.html',\r\n  styleUrls: ['./dashboard-global-timeseries-card.css'],\r\n})\r\nexport class GlobalTimeseriesCardComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  public data: any;\r\n  public updatedAt: string;\r\n  public latest: any ; // subtract 19872000000\r\n  // apex charts: https://apexcharts.com/angular-chart-demos/line-charts/zoomable-timeseries/\r\n  public series: ApexAxisChartSeries;\r\n  public chart: ApexChart;\r\n  public dataLabels: ApexDataLabels;\r\n  public markers: ApexMarkers;\r\n  public title: ApexTitleSubtitle;\r\n  public fill: ApexFill;\r\n  public yaxis: ApexYAxis;\r\n  public xaxis: ApexXAxis;\r\n  public tooltip: ApexTooltip;\r\n\r\n\r\n  ngOnInit() {\r\n    // https://corona.lmao.ninja/v2/historical/all\r\n    // https://corona.lmao.ninja/v2/historical/all?lastdays=230\r\n    // this.dashboardService.getGlobalHistoricalData();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.globalHistoricalData),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.data = response;\r\n        this.renderChart();\r\n      });\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.allAsOfYesterday),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        this.latest = response.updated;\r\n        this.dashboardService.getGlobalHistoricalData();\r\n      });\r\n  }\r\n\r\n  // https://apexcharts.com/angular-chart-demos/line-charts/zoomable-timeseries/\r\n  renderChart() {\r\n    let day = this.latest;\r\n    const dayInMilliseconds = 86400000;\r\n    const confirmed = [];\r\n    const recovered = [];\r\n    const deaths = [];\r\n\r\n    Object.keys(this.data.cases).reverse().forEach(key => {\r\n    if (!this.updatedAt)\r\n      {\r\n        this.updatedAt = new Date(key).toString();\r\n      }\r\n\r\n    day = day - dayInMilliseconds; // + 1 day\r\n    try {\r\n        // tslint:disable-next-line: radix\r\n        const count = parseInt(this.data.cases[key]);\r\n        confirmed.push([day, count]);\r\n      }\r\n      catch (err){\r\n        console.log(err);\r\n        day = day + dayInMilliseconds;\r\n      }\r\n      // console.log(dates);\r\n    });\r\n\r\n    day = this.latest;\r\n    Object.keys(this.data.recovered).reverse().forEach(key => {\r\n    if (!this.updatedAt)\r\n      {\r\n        this.updatedAt = new Date(key).toString();\r\n      }\r\n\r\n    day = day - dayInMilliseconds; // + 1 day\r\n    try {\r\n        // tslint:disable-next-line: radix\r\n        const count = parseInt(this.data.recovered[key]);\r\n        recovered.push([day, count]);\r\n      }\r\n      catch (err){\r\n        console.log(err);\r\n        day = day + dayInMilliseconds;\r\n      }\r\n      // console.log(dates);\r\n    });\r\n\r\n    day = this.latest;\r\n    Object.keys(this.data.deaths).reverse().forEach(key => {\r\n    if (!this.updatedAt)\r\n      {\r\n        this.updatedAt = new Date(key).toString();\r\n      }\r\n\r\n    day = day - dayInMilliseconds; // + 1 day\r\n    try {\r\n        // tslint:disable-next-line: radix\r\n        const count = parseInt(this.data.deaths[key]);\r\n        deaths.push([day, count]);\r\n      }\r\n      catch (err){\r\n        console.log(err);\r\n        day = day + dayInMilliseconds;\r\n      }\r\n      // console.log(dates);\r\n    });\r\n\r\n    this.series = [\r\n      {\r\n        name: 'All Confirmed Cases',\r\n        data: confirmed\r\n      }\r\n      ,\r\n      {\r\n        name: 'Recoveries',\r\n        data: recovered\r\n      }\r\n      ,\r\n      {\r\n        name: 'Deaths',\r\n        data: deaths\r\n      }\r\n    ];\r\n    this.chart = {\r\n      type: 'area',\r\n      stacked: false,\r\n      height: 350,\r\n      zoom: {\r\n        type: 'x',\r\n        enabled: true,\r\n        autoScaleYaxis: true\r\n      },\r\n      toolbar: {\r\n        autoSelected: 'zoom'\r\n      }\r\n    };\r\n    this.dataLabels = {\r\n      enabled: false\r\n    };\r\n    this.markers = {\r\n      size: 0\r\n    };\r\n    this.title = {\r\n      text: 'Coronavirus Cases',\r\n      align: 'left'\r\n    };\r\n    this.fill = {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        inverseColors: false,\r\n        opacityFrom: 0.5,\r\n        opacityTo: 0,\r\n        stops: [0, 90, 100]\r\n      }\r\n    };\r\n    this.yaxis = {\r\n      labels: {\r\n        formatter(val) {\r\n          return (val).toFixed(0);\r\n        }\r\n      },\r\n      title: {\r\n        text: 'Count'\r\n      }\r\n    };\r\n    this.xaxis = {\r\n      type: 'datetime'\r\n    };\r\n    this.tooltip = {\r\n      shared: false,\r\n      y: {\r\n        formatter(val) {\r\n          return (val).toFixed(0);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  // uses a  trial version of CanvasJS, not ideal...\r\n  renderTrial()\r\n  {\r\n      // https://canvasjs.com/angular-charts/\r\n    // const dataPoints = [];\r\n    // const y = 0;\r\n    // console.log('cases:');\r\n    // console.log(this.data.cases);\r\n    // if (Object.keys(this.data.cases).length) {\r\n    //   Object.keys(this.data.cases).forEach(key => {\r\n    //     // console.log('\\n' + key + ': ' + this.data.cases[key]);\r\n    //     dataPoints.push({ x: new Date(key), y: this.data.cases[key] });\r\n    //   });\r\n    // }\r\n    // const chart = new CanvasJS.Chart('chartContainer', {\r\n    //   zoomEnabled: true,\r\n    //   animationEnabled: true,\r\n    //   exportEnabled: true,\r\n    //   theme: 'light2',\r\n    //   title: {\r\n    //     text: ''\r\n    //   },\r\n    //   axisX: {\r\n    //     valueFormatString: 'DD MMM',\r\n    //     crosshair: {\r\n    //       enabled: true,\r\n    //       snapToDataPoint: true\r\n    //     }\r\n    //   },\r\n    //   subtitles: [{\r\n    //     text: ''\r\n    //   }],\r\n    //   data: [\r\n    //   {\r\n    //     type: 'line',\r\n    //     dataPoints\r\n    //   }]\r\n    // });\r\n    // chart.render();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin-left: 5px; margin-right: 2px; width: 50%; display: inline-block; float: left;\" title=\"The time series can be zoomed and inspected at a smaller range of dates. This graph is meant to show that the rate of change in CoViD-19 cases.\">\r\n\r\n <!-- Table inside a card-->\r\n <mat-card>\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title> <b> Interactive Time Series of Global Data</b></mat-card-title>\r\n    <mat-card-subtitle>Snapshot as of {{ updatedAt }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n    <mat-card-content>\r\n      <apx-chart\r\n      [series]=\"series\"\r\n      [chart]=\"chart\"\r\n      [dataLabels]=\"dataLabels\"\r\n      [markers]=\"markers\"\r\n      [title]=\"title\"\r\n      [fill]=\"fill\"\r\n      [yaxis]=\"yaxis\"\r\n      [xaxis]=\"xaxis\"\r\n      [tooltip]=\"tooltip\"\r\n      [autoUpdateSeries]=\"true\"></apx-chart>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\r\n\r\n// models\r\nimport {  YesterdayStats } from '../../../models/dashboard/yesterday-stats';\r\n\r\n// 3rd party\r\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\r\n\r\n// material\r\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexChart,\r\n  ApexLegend,\r\n  ApexResponsive,\r\n  ChartComponent,\r\n  ApexTitleSubtitle\r\n} from 'ng-apexcharts';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  colors: string[];\r\n  legend: ApexLegend;\r\n  plotOptions: ApexPlotOptions;\r\n  responsive: ApexResponsive | ApexResponsive[];\r\n  title: ApexTitleSubtitle;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-global-todaycases-card',\r\n  templateUrl: './dashboard-global-todaycases-card.html',\r\n  styleUrls: ['./dashboard-global-todaycases-card.css'],\r\n})\r\nexport class GlobalTodayCasesCardComponent implements OnInit, OnDestroy {\r\n  @ViewChild('chart') chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n\r\n  public data: any;\r\n\r\n  constructor(private dashboardService: DashboardService) {\r\n\r\n\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const that = this;\r\n\r\n\r\n    this.dashboardService.state$\r\n      .pipe(\r\n        map(state => state.allAsOfYesterday),\r\n        filter(data => data != null),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(response => {\r\n        that.data = response;\r\n\r\n        // https://apexcharts.com/angular-chart-demos/radialbar-charts/custom-angle-circle/\r\n\r\n        /*\r\n        todayCases: 26114\r\n        todayDeaths: 994\r\n        todayRecovered: 18475\r\n        */\r\n        const total = that.data.todayCases;\r\n\r\n        this.chartOptions = {\r\n          title: {\r\n            // tslint:disable-next-line: max-line-length\r\n            text:  `Today's New Cases: ` + that.data.todayCases, // + '\\n' +  `Today's Recoveries: ` + that.data.todayRecovered + '\\n' +  `Today's Deaths: ` + that.data.todayDeaths  ,\r\n            align: 'center'\r\n          },\r\n        // tslint:disable-next-line: max-line-length\r\n        series: [ parseFloat((that.data.todayRecovered  / total * 100).toFixed(2)), parseFloat((that.data.todayDeaths  / total * 100).toFixed(2))],\r\n        chart: {\r\n          height: 320,\r\n          type: 'radialBar',\r\n          },\r\n        plotOptions: {\r\n          radialBar: {\r\n            offsetY: 0,\r\n            startAngle: 0,\r\n            endAngle: 270,\r\n            hollow: {\r\n              margin: 5,\r\n              size: '30%',\r\n              background: 'transparent',\r\n              image: undefined\r\n            },\r\n            dataLabels: {\r\n              name: {\r\n                show: true\r\n              },\r\n              value: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        },\r\n        colors: ['#00e396', '#feb019', '#39539E'],\r\n      labels: ['Recoveries (' + this.data.todayRecovered + ')', 'Deaths (' + this.data.todayDeaths + ')'],\r\n      legend: {\r\n        show: true,\r\n        floating: true,\r\n        fontSize: '12px',\r\n        position: 'left',\r\n        offsetX: -20,\r\n        offsetY: 70,\r\n        labels: {\r\n          useSeriesColors: true\r\n        },\r\n        formatter(seriesName, opts) {\r\n          return seriesName + ':  ' + opts.w.globals.series[opts.seriesIndex] + '%';\r\n        },\r\n        itemMargin: {\r\n          horizontal: 3\r\n        }\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            legend: {\r\n              show: false\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      };\r\n        // this.chartOptions = {\r\n        //   series: [],\r\n        //   chart: {\r\n        //     width: 360,\r\n        //     type: 'pie'\r\n        //   },\r\n        //   labels: ['Active', 'Recovered', 'Died'],\r\n        //   responsive: [\r\n        //     {\r\n        //       breakpoint: 480,\r\n        //       options: {\r\n        //         chart: {\r\n        //           width: 300\r\n        //         },\r\n        //         legend: {\r\n        //           position: 'bottom'\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   ]\r\n        // };\r\n\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"card-container\" style=\"margin-left: 1px; margin-right: 1px; width: 29%; display: inline-block;\">\r\n<mat-card *ngIf='data' style=\" height: 425px;\" title=\"A recovery ratio of greater than 100% is what we need to reduce the number of active cases.\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"card-header-image\"></div>\r\n    <mat-card-title><b>Today's Cases</b></mat-card-title>\r\n    <mat-card-subtitle>Shows the percentage of today's recoveries and today's deaths for every new case.</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"margin-top: 10px;\">\r\n    <div>\r\n      <div id=\"chart\">\r\n        <apx-chart\r\n    [series]=\"chartOptions.series\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [labels]=\"chartOptions.labels\"\r\n    [legend]=\"chartOptions.legend\"\r\n    [colors]=\"chartOptions.colors\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [title]= \"chartOptions.title\"\r\n  ></apx-chart>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\" style=\"height:  100%; display: block;\">\r\n    <!-- <div>\r\n        <div style=\"display: inline-block;\"> Dashboard </div>\r\n        <div style=\"display: inline-block;\"> Countries </div>\r\n        <div style=\"display: inline-block;\"> Insights </div>\r\n\r\n        \r\n    </div> -->\r\n    <div>\r\n        <div  style=\"display: inline-block; width: 15%; min-width: 15%; float: left;\">\r\n            <app-global-tabular-card></app-global-tabular-card>\r\n            <app-global-case-ratio-card></app-global-case-ratio-card>\r\n        </div>\r\n        <div style=\"display: inline-block; max-width: 64.8%; width: 65%; max-height: 80%;\">\r\n            <app-global-map-card ></app-global-map-card>\r\n            <div>\r\n                <app-global-timeseries-card></app-global-timeseries-card>\r\n                <app-global-todaycases-card></app-global-todaycases-card>\r\n                <app-global-bubblechart-card></app-global-bubblechart-card>\r\n            </div>\r\n        </div>\r\n        <div style=\"display: inline-block; min-width: 20%; float: right;\">\r\n            <app-global-summary-card ></app-global-summary-card>\r\n            <app-global-sevendays-card ></app-global-sevendays-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div-spinner></div-spinner>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DashboardRoutingModule, routedComponents } from './dashboard.routing.module';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { SpinnerService } from 'src/app/core/spinner/spinner.service';\r\nimport { SpinnerModule } from 'src/app/core/spinner/spinner.module';\r\n\r\n// 3rd party\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\n\r\n\r\n// angular\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    routedComponents,\r\n    DashboardComponent, // container component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    DashboardRoutingModule,\r\n    SpinnerModule,\r\n    GoogleMapsModule, NgApexchartsModule,\r\n    MatTableModule, MatPaginatorModule, MatSortModule, MatCardModule,MatGridListModule\r\n  ],\r\n  exports:\r\n    [\r\n      DashboardComponent\r\n    ],\r\n  providers: [\r\n    DashboardService,\r\n    SpinnerService\r\n  ],\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { GlobalTimeseriesCardComponent } from './dashboard-global-timeseries-card/dashboard-global-timeseries-card';\r\nimport { GlobalTabularCardComponent } from './dashboard-global-tabular-card/dashboard-global-tabular-card';\r\nimport { GlobalSummaryCardComponent } from './dashboard-global-summary-card/dashboard-global-summary-card';\r\nimport { GlobalCaseRatioCardComponent  } from './dashboard-global-case-ratio-card/dashboard-global-case-ratio-card';\r\nimport { GlobalMapCardComponent } from './dashboard-global-map-card/dashboard-global-map-card';\r\nimport { GlobalBubbleChartCardComponent } from './dashboard-global-bubblechart-card/dashboard-global-bubblechart-card';\r\nimport { GlobalTodayCasesCardComponent } from './dashboard-global-todaycases-card/dashboard-global-todaycases-card';\r\nimport { GlobalSevenDayCasesCardComponent } from './dashboard-global-sevendays-card/dashboard-global-sevendays-card';\r\n\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  // tslint:disable-next-line: max-line-length\r\n  DashboardComponent, GlobalTabularCardComponent, GlobalMapCardComponent, GlobalSummaryCardComponent, GlobalCaseRatioCardComponent, GlobalTimeseriesCardComponent, GlobalBubbleChartCardComponent, GlobalTodayCasesCardComponent, GlobalSevenDayCasesCardComponent\r\n];\r\n\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\n\r\n\r\n// Core Services\r\nimport { Store } from '../../core/store/store';\r\nimport { DashboardAppDataService } from '../../core/app-data/dashboard.app-data.service';\r\nimport { SpinnerService } from '../../core/spinner/spinner.service';\r\n\r\n\r\n// Shared Service\r\nimport { ConfigurationManagerService } from '../../core/service/configuration-manager.service';\r\n\r\n\r\nexport class DashboardState {\r\n  selectedCountry = '';\r\n  globalData: any;\r\n  allAsOfYesterday: any;\r\n  globalHistoricalData: any;\r\n  allCurrentCountryData: any;\r\n  sevenDayData: any;\r\n}\r\n\r\n@Injectable()\r\nexport class DashboardService extends Store<DashboardState> {\r\n  \r\n  \r\n  constructor(private appDataService: DashboardAppDataService,\r\n              public spinnerService: SpinnerService\r\n  ) {\r\n    super(new DashboardState());\r\n\r\n  }\r\n\r\n  public getGlobalData(): void {\r\n    this.spinnerService.show();\r\n    this.appDataService.getGlobalCases().subscribe(data => {\r\n        this.setState({\r\n          ...this.state,\r\n          globalData: data,\r\n        });\r\n        this.spinnerService.hide();\r\n      });\r\n  }\r\n\r\n  public getGlobalHistoricalData() {\r\n    this.spinnerService.show();\r\n    this.appDataService.getGlobalHistoricalData().subscribe(data => {\r\n        this.setState({\r\n          ...this.state,\r\n          globalHistoricalData: data,\r\n        });\r\n        this.spinnerService.hide();\r\n      });\r\n  }\r\n  \r\n  // global summary without breakdown\r\n  public getAllAsOfYesterday(): void {\r\n     this.spinnerService.show();\r\n     this.appDataService.getAllAsOfYesterday().subscribe(data => {\r\n        this.setState({\r\n          ...this.state,\r\n          allAsOfYesterday: data,\r\n        });\r\n        this.spinnerService.hide();\r\n      });\r\n  }\r\n\r\n  // country level breakdown\r\n  public getAllCurrentCountryData() {\r\n    this.spinnerService.show();\r\n    this.appDataService.getAllCurrentCountryData().subscribe(data => {\r\n       this.setState({\r\n         ...this.state,\r\n         allCurrentCountryData: data,\r\n       });\r\n       this.spinnerService.hide();\r\n     });\r\n  }\r\n\r\n  public getDataOfPastSevenDays() {\r\n    this.spinnerService.show();\r\n    this.appDataService.getDataOfPastSevenDays().subscribe(data => {\r\n       this.setState({\r\n         ...this.state,\r\n         sevenDayData: data,\r\n       });\r\n       this.spinnerService.hide();\r\n     });\r\n  }\r\n\r\n  // private onNotificationReceived(data: any) {\r\n  //   let notification: Notification = {\r\n  //     id: data.Id,\r\n  //     assetId: data.AssetId,\r\n  //     assetName: data.AssetName,\r\n  //     alertLevelCode: data.AlertLevelCode,\r\n  //     description: data.Description,\r\n  //     receiveTime: data.ReceiveTime,\r\n  //     isRead: data.IsRead,\r\n  //     level: 2,\r\n  //   };\r\n\r\n  //   this.setState({\r\n  //     ...this.state,\r\n  //     notification: notification,\r\n  //   });\r\n  // }\r\n\r\n  // public getTreeNode(): void {\r\n  //   this.logManagerService.Log('getting tree node!');\r\n  //   this.subs.sink = this.appDataService.getTreeData().subscribe(data => {\r\n  //     this.setState({\r\n  //       ...this.state,\r\n  //       rawTreeData: data,\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  // // alert message card\r\n  // public setSelectedMessageId(nodeId: string): void {\r\n  //   this.setState({\r\n  //     ...this.state,\r\n  //     selectedMessage: nodeId\r\n  //   });\r\n  // }\r\n\r\n  // public getAssetByMessageId(nodeId: string): void {\r\n  //   if (nodeId) {\r\n  //     this.spinnerService.show();\r\n  //     this.subs.sink = this.appDataService.getAssetByMessageId(nodeId).subscribe(\r\n  //       data => {\r\n  //         this.setState({\r\n  //           ...this.state,\r\n  //           asset: data,\r\n  //         });\r\n  //         this.spinnerService.hide();\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // public getAsset(nodeId: string): void {\r\n  //   if (nodeId) {\r\n  //     this.spinnerService.show();\r\n  //     this.subs.sink = this.appDataService.getAsset(nodeId).subscribe(\r\n  //       data => {\r\n  //         this.setState({\r\n  //           ...this.state,\r\n  //           asset: data,\r\n  //         });\r\n  //         this.spinnerService.hide();\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // public getMessage(nodeId: string): void {\r\n  //   if (nodeId != null) {\r\n  //     this.spinnerService.show();\r\n  //     this.subs.sink = this.appDataService.getMessageById(nodeId).subscribe(data => {\r\n  //       data.id = nodeId;\r\n  //       this.setState({\r\n  //         ...this.state,\r\n  //         message: data,\r\n  //       });\r\n  //       this.spinnerService.show();\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // public suppressRule(assetId: string, ruleId: string, messageId: string): void {\r\n  //   if (ruleId != null) {\r\n  //     this.spinnerService.show();\r\n  //     this.subs.sink = this.appDataService.suppressRule(assetId, ruleId).subscribe(data => {\r\n  //       if (this.state.selectedMessage == messageId) {\r\n  //         this.getMessage(messageId);\r\n  //       }\r\n  //       this.spinnerService.hide();\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // public unsuppressRule(assetId: string, ruleId: string, messageId: string): void {\r\n  //   if (ruleId) {\r\n  //     this.spinnerService.show();\r\n  //     this.subs.sink = this.appDataService.unsuppressRule(assetId, ruleId).subscribe(data => {\r\n  //       if (this.state.selectedMessage == messageId) {\r\n  //         this.getMessage(messageId);\r\n  //       }\r\n  //       this.spinnerService.hide();\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // public markMessageAsRead(messageId: string): Observable<any> {\r\n  //   if (messageId) {\r\n  //     return this.appDataService.markMessageAsRead(messageId);\r\n  //   }\r\n  // }\r\n\r\n  // public Reset(): any {\r\n  //   this.setState({\r\n  //     ...this.state,\r\n  //     notification: null,\r\n  //   });\r\n  // }\r\n\r\n  // ngOnDestroy(): void {\r\n  //   this.subs.unsubscribe();\r\n  //   this.setState({\r\n  //     selectedMessage: '',\r\n  //     message: null,\r\n  //     notification: null,\r\n  //     rawTreeData: new Object(),\r\n  //     asset: null,\r\n  //     indexMap: new Array<NGMTreeIndexMap>(),\r\n  //     });\r\n  // }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}